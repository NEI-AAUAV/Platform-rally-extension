version: "3.9"

services:
  web_nei:
    environment:
      ENABLE_RALLY: 'True'

  api_rally:
    image: ghcr.io/nei-aauav/api-rally:${TAG:-latest}
    build:
      context: extensions/rally/api-rally
      dockerfile: Dockerfile.prod
    ports:
      - 8003:8003
    environment:
      ENV: production
      POSTGRES_SERVER: db_pg
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      JWT_PUBLIC_KEY_PATH: /jwt.key.pub
    volumes: 
      - /deploy/keys/jwt.key.pub:/jwt.key.pub:ro
      - /deploy/api-rally/static:/api_rally/static
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  web_rally:
    image: ghcr.io/nei-aauav/web-rally:${TAG:-latest}
    build:
      context: extensions/rally
      dockerfile: web-rally/Dockerfile.prod
      args:
        HAS_API_RALLY: 1
        API_RALLY_DIR: api-rally
        # Optionally set OPENAPI_URL if you prefer fetching from a live endpoint
        # OPENAPI_URL: "${OPENAPI_URL:-}"
    ports:
      - 3003:3003
    networks:
      - frontend
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
