name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint-python:
    name: Python Linting & Type Checking
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: api-rally/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('api-rally/poetry.lock') }}
      
      - name: Install dependencies
        working-directory: api-rally
        run: poetry install --no-interaction --with dev
      
      - name: Run black (formatting check)
        working-directory: api-rally
        run: poetry run black --check app/
        continue-on-error: true
      
      - name: Run isort (import sorting check)
        working-directory: api-rally
        run: poetry run isort --check-only app/
        continue-on-error: true
      
      - name: Run flake8 (linting)
        working-directory: api-rally
        run: poetry run flake8 app/
        continue-on-error: true
      
      - name: Run mypy (type checking)
        working-directory: api-rally
        run: poetry run mypy app/
        continue-on-error: true
      
      - name: Summary
        if: always()
        run: |
          echo "✅ Code quality checks completed"
          echo "Review any warnings above - they don't fail the build but should be addressed"

  lint-typescript:
    name: TypeScript Linting & Type Checking
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('web-rally/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      
      - name: Install dependencies
        working-directory: web-rally
        run: pnpm install --frozen-lockfile
      
      - name: Run ESLint
        working-directory: web-rally
        run: pnpm run lint || true
        continue-on-error: true
      
      - name: Run TypeScript type checking
        working-directory: web-rally
        run: pnpm run type-check || pnpm exec tsc --noEmit
        continue-on-error: true
      
      - name: Check formatting with Prettier
        working-directory: web-rally
        run: pnpm exec prettier --check "src/**/*.{ts,tsx,js,jsx,json,css}" || true
        continue-on-error: true
      
      - name: Summary
        if: always()
        run: |
          echo "✅ TypeScript quality checks completed"
          echo "Review any warnings above - they don't fail the build but should be addressed"

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
      
      - name: Check Python dependencies for vulnerabilities
        working-directory: api-rally
        run: |
          poetry install --no-interaction
          poetry run pip install safety || pip install safety
          poetry run safety check --json || echo "⚠️  Security issues found in Python dependencies"
        continue-on-error: true
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Check npm dependencies for vulnerabilities
        working-directory: web-rally
        run: |
          npm audit --audit-level=moderate || echo "⚠️  Security issues found in npm dependencies"
        continue-on-error: true
      
      - name: Summary
        run: |
          echo "✅ Security scan completed"
          echo "Review dependency vulnerabilities and update packages as needed"

