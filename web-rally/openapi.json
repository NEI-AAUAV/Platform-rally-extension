{
  "openapi": "3.1.0",
  "info": {
    "title": "Rally Tascas API",
    "version": "0.1.0"
  },
  "paths": {
    "/api/rally/v1/team/": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get Teams",
        "operationId": "get_teams_api_rally_v1_team__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ListingTeam"
                  },
                  "type": "array",
                  "title": "Response Get Teams Api Rally V1 Team  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Create Team",
        "operationId": "create_team_api_rally_v1_team__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTeam"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/team/me": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get Own Team",
        "operationId": "get_own_team_api_rally_v1_team_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTeam"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/team/{id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get Team By Id",
        "operationId": "get_team_by_id_api_rally_v1_team__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTeam"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Update Team",
        "operationId": "update_team_api_rally_v1_team__id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTeam"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Delete Team",
        "description": "Delete a team. Only admins can delete teams.",
        "operationId": "delete_team_api_rally_v1_team__id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Team Api Rally V1 Team  Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/team/{id}/checkpoint": {
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Add Checkpoint",
        "operationId": "add_checkpoint_api_rally_v1_team__id__checkpoint_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamScoresUpdate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTeam"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/checkpoint/": {
      "get": {
        "tags": [
          "CheckPoint"
        ],
        "summary": "Get Checkpoints",
        "operationId": "get_checkpoints_api_rally_v1_checkpoint__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DetailedCheckPoint"
                  },
                  "type": "array",
                  "title": "Response Get Checkpoints Api Rally V1 Checkpoint  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CheckPoint"
        ],
        "summary": "Create Checkpoint",
        "operationId": "create_checkpoint_api_rally_v1_checkpoint__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckPointCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedCheckPoint"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/checkpoint/me": {
      "get": {
        "tags": [
          "CheckPoint"
        ],
        "summary": "Get Next Checkpoint",
        "description": "Return the next checkpoint a team must head to.",
        "operationId": "get_next_checkpoint_api_rally_v1_checkpoint_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedCheckPoint"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/checkpoint/teams": {
      "get": {
        "tags": [
          "CheckPoint"
        ],
        "summary": "Get Checkpoint Teams",
        "description": "If a staff is authenticated, returned all teams that just passed\nthrough a staff's checkpoint.\nIf an admin is authenticated, returned all teams.",
        "operationId": "get_checkpoint_teams_api_rally_v1_checkpoint_teams_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "checkpoint_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Checkpoint Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListingTeam"
                  },
                  "title": "Response Get Checkpoint Teams Api Rally V1 Checkpoint Teams Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/checkpoint/reorder": {
      "put": {
        "tags": [
          "CheckPoint"
        ],
        "summary": "Reorder Checkpoints",
        "description": "Reorder checkpoints by updating their order values.",
        "operationId": "reorder_checkpoints_api_rally_v1_checkpoint_reorder_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object",
                "title": "Checkpoint Orders"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Reorder Checkpoints Api Rally V1 Checkpoint Reorder Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/checkpoint/{id}": {
      "put": {
        "tags": [
          "CheckPoint"
        ],
        "summary": "Update Checkpoint",
        "operationId": "update_checkpoint_api_rally_v1_checkpoint__id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckPointUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedCheckPoint"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CheckPoint"
        ],
        "summary": "Delete Checkpoint",
        "description": "Delete a checkpoint. Only admins can delete checkpoints.",
        "operationId": "delete_checkpoint_api_rally_v1_checkpoint__id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Checkpoint Api Rally V1 Checkpoint  Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/user/staff-assignments": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Staff Assignments",
        "description": "Get all users with rally-staff role from NEI platform and their checkpoint assignments.\nThis shows all rally-staff users from the main NEI platform and their current checkpoint assignments.",
        "operationId": "get_staff_assignments_api_rally_v1_user_staff_assignments_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RallyStaffAssignmentWithCheckpoint"
                  },
                  "type": "array",
                  "title": "Response Get Staff Assignments Api Rally V1 User Staff Assignments Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Me",
        "description": "Get current user information.\nReturns the authenticated user from the NEI platform.",
        "operationId": "get_me_api_rally_v1_user_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Me Api Rally V1 User Me Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/user/{user_id}/checkpoint-assignment": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update Checkpoint Assignment",
        "description": "Update a user's checkpoint assignment.\nThis creates/updates Rally-specific staff assignments.",
        "operationId": "update_checkpoint_assignment_api_rally_v1_user__user_id__checkpoint_assignment_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckpointAssignmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RallyStaffAssignmentWithCheckpoint"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/rally/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "View Rally Settings",
        "description": "View rally settings",
        "operationId": "view_rally_settings_api_rally_v1_rally_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RallySettingsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update Rally Settings",
        "description": "Update global rally configuration (admin only).\nArgs:\n    settings_in: New settings values\n\nReturns:\n    Updated rally settings\n\nRaises:\n    403: If user is not authorized\n    400: If validation fails",
        "operationId": "update_rally_settings_api_rally_v1_rally_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RallySettingsUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RallySettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/rally/settings/public": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "View Rally Settings Public",
        "description": "View rally settings (public access - no authentication required)",
        "operationId": "view_rally_settings_public_api_rally_v1_rally_settings_public_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RallySettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/versus/pair": {
      "post": {
        "tags": [
          "Versus"
        ],
        "summary": "Create Versus Pair",
        "description": "Create versus pair",
        "operationId": "create_versus_pair_api_rally_v1_versus_pair_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VersusPairCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersusPairResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/versus/team/{team_id}/opponent": {
      "get": {
        "tags": [
          "Versus"
        ],
        "summary": "Get Team Opponent",
        "description": "Get a team's opponent",
        "operationId": "get_team_opponent_api_rally_v1_versus_team__team_id__opponent_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersusOpponentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/versus/groups": {
      "get": {
        "tags": [
          "Versus"
        ],
        "summary": "List Versus Groups",
        "description": "Get all versus groups",
        "operationId": "list_versus_groups_api_rally_v1_versus_groups_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersusGroupListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/team/{team_id}/members": {
      "post": {
        "tags": [
          "Team Members"
        ],
        "summary": "Add Team Member",
        "description": "Add a member to a team.",
        "operationId": "add_team_member_api_rally_v1_team__team_id__members_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMemberAdd"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Team Members"
        ],
        "summary": "Get Team Members",
        "description": "Get all members of a team.",
        "operationId": "get_team_members_api_rally_v1_team__team_id__members_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberResponse"
                  },
                  "title": "Response Get Team Members Api Rally V1 Team  Team Id  Members Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/team/{team_id}/members/{user_id}": {
      "delete": {
        "tags": [
          "Team Members"
        ],
        "summary": "Remove Team Member",
        "description": "Remove a member from a team.",
        "operationId": "remove_team_member_api_rally_v1_team__team_id__members__user_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Remove Team Member Api Rally V1 Team  Team Id  Members  User Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Team Members"
        ],
        "summary": "Update Team Member",
        "description": "Update a team member's information.",
        "operationId": "update_team_member_api_rally_v1_team__team_id__members__user_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMemberUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/activities/": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "Create Activity",
        "description": "Create a new activity",
        "operationId": "create_activity_api_rally_v1_activities__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get Activities",
        "description": "Get activities list",
        "operationId": "get_activities_api_rally_v1_activities__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "checkpoint_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Checkpoint Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/activities/results": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get All Activity Results",
        "description": "Get all activity results (evaluations) with team and activity details",
        "operationId": "get_all_activity_results_api_rally_v1_activities_results_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActivityResultResponse"
                  },
                  "type": "array",
                  "title": "Response Get All Activity Results Api Rally V1 Activities Results Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/activities/{activity_id}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get Activity",
        "description": "Get activity by ID",
        "operationId": "get_activity_api_rally_v1_activities__activity_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Activity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Activities"
        ],
        "summary": "Update Activity",
        "description": "Update an activity",
        "operationId": "update_activity_api_rally_v1_activities__activity_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Activity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activities"
        ],
        "summary": "Delete Activity",
        "description": "Delete an activity",
        "operationId": "delete_activity_api_rally_v1_activities__activity_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Activity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/activities/results/": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "Create Activity Result",
        "description": "Create a new activity result",
        "operationId": "create_activity_result_api_rally_v1_activities_results__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityResultCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResultResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/activities/results/{result_id}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get Activity Result",
        "description": "Get activity result by ID",
        "operationId": "get_activity_result_api_rally_v1_activities_results__result_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Result Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResultResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Activities"
        ],
        "summary": "Update Activity Result",
        "description": "Update an activity result",
        "operationId": "update_activity_result_api_rally_v1_activities_results__result_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Result Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityResultUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResultResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/activities/results/{result_id}/extra-shots": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "Apply Extra Shots",
        "description": "Apply extra shots bonus to activity result",
        "operationId": "apply_extra_shots_api_rally_v1_activities_results__result_id__extra_shots_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Result Id"
            }
          },
          {
            "name": "extra_shots",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "title": "Extra Shots"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/activities/results/{result_id}/penalty": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "Apply Penalty",
        "description": "Apply penalty to activity result",
        "operationId": "apply_penalty_api_rally_v1_activities_results__result_id__penalty_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Result Id"
            }
          },
          {
            "name": "penalty_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(vomit|not_drinking|other)$",
              "title": "Penalty Type"
            }
          },
          {
            "name": "penalty_value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Penalty Value"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/activities/{activity_id}/ranking": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get Activity Ranking",
        "description": "Get ranking for a specific activity",
        "operationId": "get_activity_ranking_api_rally_v1_activities__activity_id__ranking_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Activity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRanking"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/activities/ranking/global": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get Global Ranking",
        "description": "Get global team ranking",
        "operationId": "get_global_ranking_api_rally_v1_activities_ranking_global_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalRanking"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/activities/team-vs/{activity_id}": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "Create Team Vs Result",
        "description": "Create team vs team activity results",
        "operationId": "create_team_vs_result_api_rally_v1_activities_team_vs__activity_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Activity Id"
            }
          },
          {
            "name": "team1_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team1 Id"
            }
          },
          {
            "name": "team2_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team2 Id"
            }
          },
          {
            "name": "winner_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Winner Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Match Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/activities/{activity_id}/statistics": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get Activity Statistics",
        "description": "Get statistics for a specific activity",
        "operationId": "get_activity_statistics_api_rally_v1_activities__activity_id__statistics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Activity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/staff/my-checkpoint": {
      "get": {
        "tags": [
          "Staff Evaluation"
        ],
        "summary": "Get My Checkpoint",
        "description": "Get the checkpoint assigned to the current staff member",
        "operationId": "get_my_checkpoint_api_rally_v1_staff_my_checkpoint_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DetailedUser"
                  }
                ],
                "title": "Curr User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedCheckPoint"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/staff/teams": {
      "get": {
        "tags": [
          "Staff Evaluation"
        ],
        "summary": "Get Teams At My Checkpoint",
        "description": "Get all teams at the staff member's assigned checkpoint",
        "operationId": "get_teams_at_my_checkpoint_api_rally_v1_staff_teams_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DetailedUser"
                  }
                ],
                "title": "Curr User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/staff/teams/{team_id}/activities": {
      "get": {
        "tags": [
          "Staff Evaluation"
        ],
        "summary": "Get Team Activities For Evaluation",
        "description": "Get activities for a specific team that can be evaluated by this staff member",
        "operationId": "get_team_activities_for_evaluation_api_rally_v1_staff_teams__team_id__activities_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DetailedUser"
                  }
                ],
                "title": "Curr User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/staff/teams/{team_id}/activities/{activity_id}/evaluate": {
      "post": {
        "tags": [
          "Staff Evaluation"
        ],
        "summary": "Evaluate Team Activity",
        "description": "Evaluate a team's performance in an activity",
        "operationId": "evaluate_team_activity_api_rally_v1_staff_teams__team_id__activities__activity_id__evaluate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          },
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Activity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityResultEvaluation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResultResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/staff/teams/{team_id}/activities/{activity_id}/evaluate/{result_id}": {
      "put": {
        "tags": [
          "Staff Evaluation"
        ],
        "summary": "Update Team Activity Evaluation",
        "description": "Update a team's activity evaluation",
        "operationId": "update_team_activity_evaluation_api_rally_v1_staff_teams__team_id__activities__activity_id__evaluate__result_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          },
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Activity Id"
            }
          },
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Result Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityResultUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResultResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/staff/all-evaluations": {
      "get": {
        "tags": [
          "Staff Evaluation"
        ],
        "summary": "Get All Evaluations",
        "description": "Get all evaluations - accessible by managers only",
        "operationId": "get_all_evaluations_api_rally_v1_staff_all_evaluations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "checkpoint_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Checkpoint Id"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rally/v1/rally/duration": {
      "get": {
        "tags": [
          "Rally Duration"
        ],
        "summary": "Get Rally Duration",
        "description": "Get rally duration and timing information.\n\nReturns:\n    Rally timing status including current time, start/end times, \n    time remaining/elapsed, and progress percentage.",
        "operationId": "get_rally_duration_api_rally_v1_rally_duration_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Rally Duration Api Rally V1 Rally Duration Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/rally/v1/rally/team-duration/{team_id}": {
      "get": {
        "tags": [
          "Rally Duration"
        ],
        "summary": "Get Team Rally Duration",
        "description": "Get rally duration information for a specific team.\n\nArgs:\n    team_id: ID of the team to get duration info for\n    \nReturns:\n    Team-specific rally duration information.",
        "operationId": "get_team_rally_duration_api_rally_v1_rally_team_duration__team_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Team Rally Duration Api Rally V1 Rally Team Duration  Team Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "activity_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityType"
              }
            ],
            "description": "Activity type enum"
          },
          "checkpoint_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Checkpoint Id"
          },
          "config": {
            "type": "object",
            "title": "Config"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "activity_type",
          "checkpoint_id"
        ],
        "title": "ActivityCreate",
        "description": "Schema for creating an activity"
      },
      "ActivityListResponse": {
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/ActivityResponse"
            },
            "type": "array",
            "title": "Activities"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "activities",
          "total",
          "page",
          "size"
        ],
        "title": "ActivityListResponse",
        "description": "Schema for activity list response"
      },
      "ActivityRanking": {
        "properties": {
          "activity_id": {
            "type": "integer",
            "title": "Activity Id"
          },
          "activity_name": {
            "type": "string",
            "title": "Activity Name"
          },
          "rankings": {
            "items": {
              "$ref": "#/components/schemas/TeamRanking"
            },
            "type": "array",
            "title": "Rankings"
          }
        },
        "type": "object",
        "required": [
          "activity_id",
          "activity_name",
          "rankings"
        ],
        "title": "ActivityRanking",
        "description": "Schema for activity-specific ranking"
      },
      "ActivityResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "activity_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityType"
              }
            ],
            "description": "Activity type enum"
          },
          "checkpoint_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Checkpoint Id"
          },
          "config": {
            "type": "object",
            "title": "Config"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "activity_type",
          "checkpoint_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "ActivityResponse",
        "description": "Schema for activity response"
      },
      "ActivityResultCreate": {
        "properties": {
          "activity_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Activity Id"
          },
          "team_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Team Id"
          },
          "result_data": {
            "type": "object",
            "title": "Result Data"
          },
          "extra_shots": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Extra Shots",
            "default": 0
          },
          "penalties": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Penalties"
          }
        },
        "type": "object",
        "required": [
          "activity_id",
          "team_id"
        ],
        "title": "ActivityResultCreate",
        "description": "Schema for creating an activity result"
      },
      "ActivityResultEvaluation": {
        "properties": {
          "result_data": {
            "type": "object",
            "title": "Result Data"
          },
          "extra_shots": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Extra Shots",
            "default": 0
          },
          "penalties": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Penalties"
          }
        },
        "type": "object",
        "title": "ActivityResultEvaluation",
        "description": "Schema for activity result evaluation (without team_id and activity_id)"
      },
      "ActivityResultResponse": {
        "properties": {
          "activity_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Activity Id"
          },
          "team_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Team Id"
          },
          "result_data": {
            "type": "object",
            "title": "Result Data"
          },
          "extra_shots": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Extra Shots",
            "default": 0
          },
          "penalties": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Penalties"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "time_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Score"
          },
          "points_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Points Score"
          },
          "boolean_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Boolean Score"
          },
          "team_vs_result": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Vs Result"
          },
          "final_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Final Score"
          },
          "is_completed": {
            "type": "boolean",
            "title": "Is Completed",
            "default": false
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "activity_id",
          "team_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "ActivityResultResponse",
        "description": "Schema for activity result response"
      },
      "ActivityResultUpdate": {
        "properties": {
          "result_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Data"
          },
          "extra_shots": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Shots"
          },
          "penalties": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Penalties"
          },
          "is_completed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Completed"
          }
        },
        "type": "object",
        "title": "ActivityResultUpdate",
        "description": "Schema for updating an activity result"
      },
      "ActivityType": {
        "type": "string",
        "enum": [
          "TimeBasedActivity",
          "ScoreBasedActivity",
          "BooleanActivity",
          "TeamVsActivity",
          "GeneralActivity"
        ],
        "title": "ActivityType",
        "description": "Enum for activity types with string values for database compatibility"
      },
      "ActivityUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "ActivityUpdate",
        "description": "Schema for updating an activity"
      },
      "CheckPointCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "order": {
            "type": "integer",
            "title": "Order"
          }
        },
        "type": "object",
        "required": [
          "name",
          "order"
        ],
        "title": "CheckPointCreate"
      },
      "CheckPointUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          }
        },
        "type": "object",
        "title": "CheckPointUpdate"
      },
      "CheckpointAssignmentUpdate": {
        "properties": {
          "checkpoint_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkpoint Id"
          }
        },
        "type": "object",
        "title": "CheckpointAssignmentUpdate"
      },
      "DetailedCheckPoint": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "order": {
            "type": "integer",
            "title": "Order"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "order",
          "id"
        ],
        "title": "DetailedCheckPoint"
      },
      "DetailedTeam": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "classification": {
            "type": "integer",
            "title": "Classification"
          },
          "versus_group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versus Group Id"
          },
          "times": {
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "type": "array",
            "title": "Times"
          },
          "score_per_checkpoint": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Score Per Checkpoint"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/ListingUser"
            },
            "type": "array",
            "title": "Members"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "total",
          "classification",
          "times",
          "score_per_checkpoint",
          "members"
        ],
        "title": "DetailedTeam"
      },
      "DetailedUser": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "team_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Id"
          },
          "is_captain": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Captain",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled"
          },
          "staff_checkpoint_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staff Checkpoint Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "disabled"
        ],
        "title": "DetailedUser"
      },
      "GlobalRanking": {
        "properties": {
          "rankings": {
            "items": {
              "$ref": "#/components/schemas/TeamRanking"
            },
            "type": "array",
            "title": "Rankings"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "rankings",
          "last_updated"
        ],
        "title": "GlobalRanking",
        "description": "Schema for global team ranking"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ListingTeam": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "classification": {
            "type": "integer",
            "title": "Classification"
          },
          "versus_group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versus Group Id"
          },
          "num_members": {
            "type": "integer",
            "title": "Num Members"
          },
          "times": {
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "type": "array",
            "title": "Times",
            "default": []
          },
          "last_checkpoint_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Checkpoint Time"
          },
          "last_checkpoint_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Checkpoint Score"
          },
          "last_checkpoint_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Checkpoint Number"
          },
          "last_checkpoint_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Checkpoint Name"
          },
          "current_checkpoint_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Checkpoint Number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "total",
          "classification",
          "num_members",
          "last_checkpoint_time"
        ],
        "title": "ListingTeam",
        "description": "The schema returned when listing multiple teams"
      },
      "ListingUser": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "team_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Id"
          },
          "is_captain": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Captain",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "ListingUser"
      },
      "RallySettingsResponse": {
        "properties": {
          "max_teams": {
            "type": "integer",
            "title": "Max Teams"
          },
          "max_members_per_team": {
            "type": "integer",
            "title": "Max Members Per Team"
          },
          "enable_versus": {
            "type": "boolean",
            "title": "Enable Versus"
          },
          "rally_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rally Start Time"
          },
          "rally_end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rally End Time"
          },
          "penalty_per_puke": {
            "type": "integer",
            "title": "Penalty Per Puke"
          },
          "penalty_per_not_drinking": {
            "type": "integer",
            "title": "Penalty Per Not Drinking"
          },
          "bonus_per_extra_shot": {
            "type": "integer",
            "title": "Bonus Per Extra Shot"
          },
          "max_extra_shots_per_member": {
            "type": "integer",
            "title": "Max Extra Shots Per Member"
          },
          "checkpoint_order_matters": {
            "type": "boolean",
            "title": "Checkpoint Order Matters"
          },
          "enable_staff_scoring": {
            "type": "boolean",
            "title": "Enable Staff Scoring"
          },
          "show_live_leaderboard": {
            "type": "boolean",
            "title": "Show Live Leaderboard"
          },
          "show_team_details": {
            "type": "boolean",
            "title": "Show Team Details"
          },
          "show_checkpoint_map": {
            "type": "boolean",
            "title": "Show Checkpoint Map"
          },
          "rally_theme": {
            "type": "string",
            "title": "Rally Theme"
          },
          "public_access_enabled": {
            "type": "boolean",
            "title": "Public Access Enabled"
          }
        },
        "type": "object",
        "required": [
          "max_teams",
          "max_members_per_team",
          "enable_versus",
          "penalty_per_puke",
          "penalty_per_not_drinking",
          "bonus_per_extra_shot",
          "max_extra_shots_per_member",
          "checkpoint_order_matters",
          "enable_staff_scoring",
          "show_live_leaderboard",
          "show_team_details",
          "show_checkpoint_map",
          "rally_theme",
          "public_access_enabled"
        ],
        "title": "RallySettingsResponse"
      },
      "RallySettingsUpdate": {
        "properties": {
          "max_teams": {
            "type": "integer",
            "title": "Max Teams"
          },
          "max_members_per_team": {
            "type": "integer",
            "title": "Max Members Per Team"
          },
          "enable_versus": {
            "type": "boolean",
            "title": "Enable Versus"
          },
          "rally_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rally Start Time"
          },
          "rally_end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rally End Time"
          },
          "penalty_per_puke": {
            "type": "integer",
            "title": "Penalty Per Puke"
          },
          "penalty_per_not_drinking": {
            "type": "integer",
            "title": "Penalty Per Not Drinking"
          },
          "bonus_per_extra_shot": {
            "type": "integer",
            "title": "Bonus Per Extra Shot"
          },
          "max_extra_shots_per_member": {
            "type": "integer",
            "title": "Max Extra Shots Per Member"
          },
          "checkpoint_order_matters": {
            "type": "boolean",
            "title": "Checkpoint Order Matters"
          },
          "enable_staff_scoring": {
            "type": "boolean",
            "title": "Enable Staff Scoring"
          },
          "show_live_leaderboard": {
            "type": "boolean",
            "title": "Show Live Leaderboard"
          },
          "show_team_details": {
            "type": "boolean",
            "title": "Show Team Details"
          },
          "show_checkpoint_map": {
            "type": "boolean",
            "title": "Show Checkpoint Map"
          },
          "rally_theme": {
            "type": "string",
            "title": "Rally Theme"
          },
          "public_access_enabled": {
            "type": "boolean",
            "title": "Public Access Enabled"
          }
        },
        "type": "object",
        "required": [
          "max_teams",
          "max_members_per_team",
          "enable_versus",
          "penalty_per_puke",
          "penalty_per_not_drinking",
          "bonus_per_extra_shot",
          "max_extra_shots_per_member",
          "checkpoint_order_matters",
          "enable_staff_scoring",
          "show_live_leaderboard",
          "show_team_details",
          "show_checkpoint_map",
          "rally_theme",
          "public_access_enabled"
        ],
        "title": "RallySettingsUpdate"
      },
      "RallyStaffAssignmentWithCheckpoint": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "checkpoint_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkpoint Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "checkpoint_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkpoint Name"
          },
          "checkpoint_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkpoint Description"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "id"
        ],
        "title": "RallyStaffAssignmentWithCheckpoint",
        "description": "Staff assignment with checkpoint details"
      },
      "TeamCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TeamCreate"
      },
      "TeamMemberAdd": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "is_captain": {
            "type": "boolean",
            "title": "Is Captain",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TeamMemberAdd"
      },
      "TeamMemberResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "is_captain": {
            "type": "boolean",
            "title": "Is Captain",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "TeamMemberResponse"
      },
      "TeamMemberUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "is_captain": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Captain"
          }
        },
        "type": "object",
        "title": "TeamMemberUpdate"
      },
      "TeamRanking": {
        "properties": {
          "team_id": {
            "type": "integer",
            "title": "Team Id"
          },
          "team_name": {
            "type": "string",
            "title": "Team Name"
          },
          "total_score": {
            "type": "number",
            "title": "Total Score"
          },
          "activities_completed": {
            "type": "integer",
            "title": "Activities Completed"
          },
          "rank": {
            "type": "integer",
            "title": "Rank"
          }
        },
        "type": "object",
        "required": [
          "team_id",
          "team_name",
          "total_score",
          "activities_completed",
          "rank"
        ],
        "title": "TeamRanking",
        "description": "Schema for team ranking"
      },
      "TeamScoresUpdate": {
        "properties": {
          "checkpoint_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checkpoint Id"
          },
          "question_score": {
            "type": "integer",
            "title": "Question Score"
          },
          "time_score": {
            "type": "integer",
            "title": "Time Score"
          },
          "pukes": {
            "type": "integer",
            "title": "Pukes"
          },
          "skips": {
            "type": "integer",
            "title": "Skips"
          }
        },
        "type": "object",
        "required": [
          "question_score",
          "time_score",
          "pukes",
          "skips"
        ],
        "title": "TeamScoresUpdate"
      },
      "TeamUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "times": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "date-time"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Times"
          },
          "score_per_checkpoint": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score Per Checkpoint"
          },
          "question_scores": {
            "anyOf": [
              {
                "items": {
                  "type": "boolean"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Question Scores"
          },
          "time_scores": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Scores"
          },
          "pukes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pukes"
          },
          "skips": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skips"
          }
        },
        "type": "object",
        "title": "TeamUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VersusGroupListResponse": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/VersusPairResponse"
            },
            "type": "array",
            "title": "Groups"
          }
        },
        "type": "object",
        "required": [
          "groups"
        ],
        "title": "VersusGroupListResponse"
      },
      "VersusOpponentResponse": {
        "properties": {
          "opponent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opponent Id"
          },
          "opponent_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opponent Name"
          }
        },
        "type": "object",
        "required": [
          "opponent_id",
          "opponent_name"
        ],
        "title": "VersusOpponentResponse"
      },
      "VersusPairCreate": {
        "properties": {
          "team_a_id": {
            "type": "integer",
            "title": "Team A Id"
          },
          "team_b_id": {
            "type": "integer",
            "title": "Team B Id"
          }
        },
        "type": "object",
        "required": [
          "team_a_id",
          "team_b_id"
        ],
        "title": "VersusPairCreate"
      },
      "VersusPairResponse": {
        "properties": {
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "team_a_id": {
            "type": "integer",
            "title": "Team A Id"
          },
          "team_b_id": {
            "type": "integer",
            "title": "Team B Id"
          }
        },
        "type": "object",
        "required": [
          "group_id",
          "team_a_id",
          "team_b_id"
        ],
        "title": "VersusPairResponse"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {
              "admin": "Full access to everything.",
              "manager-rally": "Edit rally tascas."
            },
            "tokenUrl": "http://localhost:8000/api/nei/v1/auth/login"
          }
        }
      }
    }
  }
}